AWSTemplateFormatVersion: 2010-09-09
Description: >-
  AWS CloudFormation Template for a 3 Tier Web Architecture : 
  Create a single EC2 instance and a local MySQL database for storage. 
  This template uses the AWS CloudFormation bootstrap scripts to install 
  the packages and files necessary to deploy the Apache web server, and MySQL at instance launch time.
Parameters:
  VpcId:
    Description: VPC Id
    Type: String
    Default: vpc-9bcee7f3
  Subnets:
    Type: 'List<AWS::EC2::Subnet::Id>'
    Description: The list of SubnetIds in your Virtual Private Cloud (VPC)
    ConstraintDescription: >-
      must be a list of at least two existing subnets associated with at least
      two different availability zones. They should be residing in the selected
      Virtual Private Cloud.
  ImageId:
    Description: 'Linux 2 AMI'
    Type: String
    Default: 'ami-0a4b5c4a6ada12bb0'
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
      - t1.micro
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
      - m1.small
      - m1.medium
      - m1.large
      - m1.xlarge
      - m2.xlarge
      - m2.2xlarge
      - m2.4xlarge
      - m3.medium
      - m3.large
      - m3.xlarge
      - m3.2xlarge
      - m4.large
      - m4.xlarge
      - m4.2xlarge
      - m4.4xlarge
      - m4.10xlarge
      - c1.medium
      - c1.xlarge
      - c3.large
      - c3.xlarge
      - c3.2xlarge
      - c3.4xlarge
      - c3.8xlarge
      - c4.large
      - c4.xlarge
      - c4.2xlarge
      - c4.4xlarge
      - c4.8xlarge
      - g2.2xlarge
      - g2.8xlarge
      - r3.large
      - r3.xlarge
      - r3.2xlarge
      - r3.4xlarge
      - r3.8xlarge
      - i2.xlarge
      - i2.2xlarge
      - i2.4xlarge
      - i2.8xlarge
      - d2.xlarge
      - d2.2xlarge
      - d2.4xlarge
      - d2.8xlarge
      - hi1.4xlarge
      - hs1.8xlarge
      - cr1.8xlarge
      - cc2.8xlarge
      - cg1.4xlarge
    ConstraintDescription: It must be a valid EC2 instance type.
  KeyName:
    Description: EC2 KeyPair to enable SSH access to the instance
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: It must be an existing EC2 KeyPair.
  DBName:
    Default: MyRDS
    Description: MySQL database name
    Type: String
    MinLength: '1'
    MaxLength: '64'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: It must begin with a letter and contain only alphanumeric characters and no special symbols.
  DBUser:
    NoEcho: 'true'
    Description: Username to access the SQL database
    Type: String
    MinLength: '4'
    MaxLength: '16'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: It must begin with a letter and contain only alphanumeric characters and no special symbols.
  DBPassword:
    NoEcho: 'true'
    Description: Password to access the SQL database
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: It must contain only alphanumeric characters and no special symbols.

Resources:
# Web Server Layer
  WebServerASG:
    Type: 'AWS::AutoScaling::AutoScalingGroup'
    Properties:
      VPCZoneIdentifier: !Ref Subnets
      LaunchConfigurationName: !Ref LaunchConfig
      MinSize: '1'
      MaxSize: '3'
      TargetGroupARNs:
        - !Ref ALBTargetGroup
  LaunchConfig:
    Type: 'AWS::AutoScaling::LaunchConfiguration'
    Properties:
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref EC2SecurityGroup
      UserData: 
        Fn::Base64: 
          !Sub |
            #!/bin/bash
            # Use this for your user data (script from top to bottom)
            yum update -y
            yum install -y httpd
            systemctl start httpd
            systemctl enable httpd
            echo "<h1>ALB Health Check Confirmation from $(hostname -f)</h1>" > /var/www/html/index.html
      KeyName: !Ref KeyName

# Load Balancer
  ApplicationLoadBalancer:
    Type: 'AWS::ElasticLoadBalancingV2::LoadBalancer'
    Properties:
      Subnets: !Ref Subnets
  ALBListener:
    Type: 'AWS::ElasticLoadBalancingV2::Listener'
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref ALBTargetGroup
      LoadBalancerArn: !Ref ApplicationLoadBalancer
      Port: '80'
      Protocol: HTTP
  ALBTargetGroup:
    Type: 'AWS::ElasticLoadBalancingV2::TargetGroup'
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: !Ref VpcId
      
#EC2 Security Group to allow traffic only from the ALB's security group.
  EC2SecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Enable SSH access and HTTP from the load balancer only
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          SourceSecurityGroupId: !Select 
            - 0
            - !GetAtt 
              - ApplicationLoadBalancer
              - SecurityGroups
      VpcId: !Ref VpcId
  
  # Data Layer DB2 Instance
  MyRDSDatabase:
    Type: AWS::RDS::DBInstance
    Properties:
      DBName: !Ref DBName
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      Engine: MySQL
      DBInstanceClass: db.t2.micro
      StorageType: gp2
      PubliclyAccessible: True
      AllocatedStorage: "10"
      DBInstanceIdentifier: !Join ["-", [!Ref DBName, !Ref "AWS::Region"]]
      AvailabilityZone: !Select [1, !GetAZs ""]

Outputs:
  WebURL:
    Description: The URL of the website
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - ApplicationLoadBalancer
          - DNSName
  RDSConnectionEndpoint:
    Description: RDS connection endpoint for the master database
    Value: !GetAtt MyRDSDatabase.Endpoint.Address 